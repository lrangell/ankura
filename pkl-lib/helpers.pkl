module helpers

import "karabiner.pkl"
import "keys.pkl"






function vimNavigation(): karabiner.Rule = 
  vimNavigationLayer(keys.left_control)

function vimNavigationLayer(modifierKey: String): karabiner.Rule = 
  karabiner.layer(modifierKey, karabiner.mapping(new Mapping {
    ["h"] = keys.left_arrow
    ["j"] = keys.down_arrow
    ["k"] = keys.up_arrow
    ["l"] = keys.right_arrow
    ["0"] = keys.home
    ["4"] = keys.end
    ["g"] = keys.page_up
    ["d"] = keys.delete_forward
    ["x"] = keys.delete_or_backspace
  }))




function launchApp(key: String, app: String): karabiner.Manipulator = 
  karabiner.map(key, new karabiner.ToEvent {
    shell_command = "open -a '\(app)'"
  })

function launchAppMods(key: String, app: String, modifiers: List<String>): karabiner.Manipulator = 
  karabiner.withMods(modifiers, key, new karabiner.ToEvent {
    shell_command = "open -a '\(app)'"
  })
















// Common pattern shortcuts using new factory functions

// Simple caps lock remappings
function capsToEsc(): karabiner.Rule = 
  karabiner.rule("Caps Lock to Escape", karabiner.map(keys.caps_lock, keys.escape))

function capsToCtrl(): karabiner.Rule = 
  karabiner.rule("Caps Lock to Control", karabiner.map(keys.caps_lock, keys.left_control))

function capsToCtrlEsc(): karabiner.Rule = 
  karabiner.rule(
    "Caps Lock to Control when held, Escape when alone",
    karabiner.dualUse(keys.caps_lock, keys.left_control, keys.escape)
  )

// Spacebar shortcuts
function spaceToCmd(): karabiner.Rule = 
  karabiner.rule(
    "Spacebar to Command when held, Space when alone",
    karabiner.dualUse(keys.spacebar, keys.left_command, keys.spacebar)
  )

function spaceToOpt(): karabiner.Rule = 
  karabiner.rule(
    "Spacebar to Option when held, Space when alone",
    karabiner.dualUse(keys.spacebar, keys.left_option, keys.spacebar)
  )

function spaceToCtrl(): karabiner.Rule = 
  karabiner.rule(
    "Spacebar to Control when held, Space when alone",
    karabiner.dualUse(keys.spacebar, keys.left_control, keys.spacebar)
  )

// Command key dual-use
function cmdToRecent(): karabiner.Rule = 
  karabiner.rule(
    "Command to recent space when alone",
    karabiner.dualUse(keys.left_command, keys.left_command, new karabiner.ToEvent {
      key_code = keys.tab
      modifiers = List(keys.left_command)
    })
  )

// Shell command helper
function shell(cmd: String): karabiner.ToEvent = new karabiner.ToEvent {
  shell_command = cmd
}